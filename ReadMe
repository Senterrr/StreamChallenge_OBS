StreamChallenge OBS
A local tool to manage stream challenges (checklists, wheel of fortune, etc.) and show them in OBS through a browser source.

📦 Setup (first time only)

1. Install Node.js
Download & install the LTS version from nodejs.org
Verify installation in terminal:

node -v


2. Install dependencies
From the project folder, go into the ws-server folder and run:

cd ws-server
npm install

🚀 Launching on Windows
3. Launch the local server so OBS can pick it up as a source
Double-click start.bat in the project root.

This will:
Start the local WebSocket server and open the controller.html file in your default browser

🍎 Launching on macOS
3. Launch the local server so OBS can pick it up as a source
Option A — Double-click launcher

Double-click start-macos.command in the project root.

This will:
• Open a Terminal window running the local server
• Open the Controller in your default browser
• Open the Overlay (for testing) and copy its URL to your clipboard

Option B — Manual run (Terminal)

cd path/to/StreamChallenge_OBS/ws-server
node server.js

Then open Controller/controller.html in your browser.



🎥 Add Overlay to OBS
4. Setting the tool as the OBS browser source
In OBS → + → Browser

Check "Local file"
Select overlay.html from this project
Set width/height to match your canvas (e.g. 1920×1080)


🕹️ Usage
5. Setting the tool as the OBS browser source

Controller (controller.html) → Off-stream control panel

Overlay (overlay.html) → The visual that shows in OBS

Both connect through the local WebSocket server (default: ws://127.0.0.1:17311).


🔧 Common Issues
'Controller/Overlay says "Disconnected"'
Make sure the server is running (start.bat on Windows, node server.js on Mac).
Allow Node.js through the firewall.

'Overlay is blank in OBS'
Ensure you checked Local file and selected overlay.html.
Channel names in Controller & Overlay must match (default: obs_challenge_overlay).


That’s it — just launch the server, open the Controller, and add the Overlay to OBS 🎉